/** @format */

@use 'sass:math';
@use './var/grid' as VAR;

// Grid

.b-row {
    display: flex;
    flex-wrap: wrap;

    [class*='b-col'] {
        position: relative;
    }

    .b-col {
        flex: 1;
    }
}

@mixin make-grid($i, $columns) {
    .b-col-#{$i} {
        flex: 0 0 calc(100% * #{$i} / #{$columns});
        max-width: calc(100% * #{$i} / #{$columns});
    }
    [class*='b-col'].offset-#{$i} {
        margin-left: calc(100% * #{$i} / #{$columns});
    }
}

@mixin make-grid-columns($columns) {
    @for $i from 1 through $columns {
        @if ($columns == 12) {
            @include make-grid($i, $columns);
        } @else {
            .b-row-#{$columns} > {
                @include make-grid($i, $columns);
            }
        }
    }
}

@include make-grid-columns(VAR.$grid-columns);
@include make-grid-columns(10);

@for $counter from 1 through 10 {
    $gutter-num: (4 * $counter);
    $gutter: 1px * $gutter-num;

    .b-row.g-#{$gutter-num} {
        // 该属性需要较新版的浏览器才支持，此时如果指定子项宽度，则会超出 row
        column-gap: $gutter;
        // margin-right: if($counter == 0, 0, math.div(-$gutter, 2));
        // margin-left: if($counter == 0, 0, math.div(-$gutter, 2));

        & > [class*='b-col-'] {
            // padding-right: if($counter == 0, 0, math.div($gutter, 2));
            // padding-left: if($counter == 0, 0, math.div($gutter, 2));
        }

        // @for $i from 1 through 12 {
        //     & > {
        //         &:nth-child(1):nth-last-child(4),
        //         &:nth-child(2):nth-last-child(3) {
        //             $len: $gutter - math.div($gutter, 4);
        //             &.b-col-#{$i} {
        //                 flex: 0 0 calc(calc(100% * #{$i} / 12) - $len);
        //                 max-width: calc(calc(100% * #{$i} / 12) - $len);
        //             }
        //         }
        //     }
        // }
    }
}
